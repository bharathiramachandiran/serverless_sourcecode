

# service: 'serverless-app'

# provider:
#   name: aws
#   runtime: python3.9
#   stage: ${opt:stage, 'test'}
#   region: ${opt:region, 'ap-south-1'}
#   environment:
#     STAGE: ${self:provider.stage}
  
# plugins:
#   - serverless-python-requirements

# package:
#   individually: true
#   excludeDevDependencies: true

# custom:
#   pythonRequirements:
#     dockerizePip: true
#     slim: true
#     useStaticCache: true

# functions:
#   hello:
#     handler: src/test.hello
#     events:
#       - http:
#           path: hello
#           method: get
  
#   world:
#     handler: src/test.world
#     events:
#       - http:
#           path: world
#           method: get


service: 'serverless-app'

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'test'}
  region: ${opt:region, 'ap-south-1'}
  environment:
    STAGE: ${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cloudformation:DescribeStackResource
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
  
plugins:
  - serverless-python-requirements

package:
  individually: true
  excludeDevDependencies: true

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    useStaticCache: true

functions:
  hello:
    handler: src/test.hello
    events:
      - http:
          path: hello
          method: get
  
  world:
    handler: src/test.world
    events:
      - http:
          path: world
          method: get